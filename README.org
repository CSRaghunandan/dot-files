* dot-files repository

  All the dot-files for my Arch Linux installation with *i3-gaps* as the tiling
  window manager
  
* Configure ZSH
  
  + Install and use ~zsh~ as the default shell by running ~chsh -s $(which zsh)~
  + Install [[https://github.com/zimfw/zimfw][zimfw]] by following the instructions in readme
  + After installation, run ~zimfw install~ followed by ~zimfw uninstall~, to
    modify the plugins for ~zimfw~
  + Install [[https://github.com/alacritty/alacritty][alacritty]]  as the default terminal.
    + Configure environment variables for terminals by adding the below lines to
      =.zshenv=:

      #+BEGIN_SRC bash
export TERM="alacritty"
export TERMINAL="alacritty"
#+END_SRC

    
* Command line tools
  
** Useful command line line tools written in Rust
   
   + Use [[https://github.com/sharkdp/fd][fd]] as an alternative for =find=
   + Use [[https://github.com/BurntSushi/ripgrep][Ripgrep]] as an alternative for =grep=
   + [[https://github.com/phiresky/ripgrep-all][ripgrep_all]]: =rga=: ripgrep, but also search in PDFs, E-Books, Office
     documents, zip, tar.gz, etc.
   + [[https://github.com/m4b/bingrep][bingrep]]: like ~grep~ UBER, but for binaries
   + [[https://github.com/XAMPPRocky/tokei][tokei]]: count lines of code
   + Use [[https://github.com/sharkdp/bat][bat]]  as an alternative for =cat=
   + Use [[https://github.com/ogham/exa][exa]] as a modern alternative to =ls=
   + Use [[https://github.com/Canop/broot][broot]] as a modern alternative to tree
   + [[https://github.com/yaa110/nomino][nomino]]: batch rename files using regex
   + [[https://github.com/denisidoro/navi/][navi]]: An interactive cheatsheet tool for the command-line
   + [[https://github.com/sharkdp/hyperfine][hyperfine]]: A command-line benchmarking tool
   + [[https://github.com/sharkdp/hexyl][hexyl]]: command-line hex viewer 
   + [[https://github.com/dalance/procs/][procs]]: A modern replacement for ps written in Rust
   + [[https://github.com/cjbassi/ytop][ytop]]: A TUI system monitor written in Rust
   + [[https://github.com/SoptikHa2/desed][desed]]: Debugger for Sed: demystify and debug your sed scripts, from comfort
     of your terminal.
   + [[https://github.com/dandavison/delta][delta]]: A syntax-highlighter for git and diff output
   + [[https://github.com/jD91mZM2/xidlehook][xidlehook]]: xidlehook is a general-purpose replacement for xautolock. It
     executes a command when the computer has been idle for a specified amount
     of time.
   + [[https://starship.rs/config][starship]]: Customizable shell prompt written in Rust

     Install it with =starship-bin= package in AUR. Also, install
     =powerline-fonts= as the dependency for starship prompt
   + [[https://github.com/watchexec/watchexec][watchexec]]: Executes commands in response to file modifications
   + [[https://github.com/greshake/i3status-rust][i3status-rs:]] as the bar for i3wm
   + [[https://github.com/chmln/enact][enact:]] to have automatic configuration of multiple monitors with
     hotplug support
   + [[https://github.com/tree-sitter/tree-sitter/][tree-sitter]]: An incremental parsing system for programming tools
     https://tree-sitter.github.io
   + [[https://github.com/dotenv-linter/dotenv-linter][dotenv-linter]]: lint dotenv files
   + [[https://github.com/Morganamilo/paru][paru]]: AUR helper written in Rust
   + yamllint
   + pre-commit
   + conform

** Useful command line utilities

   + [[https://github.com/tmux/tmux][tmux]]:  a terminal multiplexer
   + [[https://github.com/zquestz/s][s]]: search from the command line
   + [[https://github.com/isacikgoz/tldr][tldr++]]: quickly view cheatsheets for linux commands
   + [[https://github.com/nosarthur/gita][Gita]]: Manage multiple git repositories easily
   + [[https://dev.yorhel.nl/ncdu][ncdu]]: Ncdu is a disk usage analyzer with an ncurses interface.
   + [[https://lnav.org/][lnav]]: Watch and analyze your log files from a terminal.
   + [[https://salsa.debian.org/minicom-team/minicom][minicom]]: Serial communications program
   + [[https://github.com/stedolan/jq][jq]]: command line JSON processor
   + [[https://ffmpeg.org/][ffmpeg]]: A complete, cross-platform solution to record, convert and stream
     audio and video.
   + [[https://github.com/ImageMagick/ImageMagick][imagemagick]],[[http://www.graphicsmagick.org/index.html][graphicsmagick]]: manipulate images on the command line
   + [[https://graphviz.org/][graphviz]]: graph visualization software
   + [[https://gstreamer.freedesktop.org/][Gstreamer]]: pipeline based multi-media framework
   + [[https://github.com/denilsonsa/prettyping][prettyping]]: is a wrapper around the standard =ping= tool, making the output
     prettier, more colorful, more compact, and easier to read.
     + Replace =ping= with =prettyping= using an alias:

       #+BEGIN_SRC bash
alias ping=prettyping  
#+END_SRC

   + [[https://github.com/mptre/yank/][yank]]: yank terminal output to clipboard
   + [[https://github.com/syncthing/syncthing][syncthing]]: modern cross platform alternative to rsync
   + [[https://www.gnu.org/software/stow/][GNU Stow]]: GNU Stow is a symlink farm manager which takes distinct packages
     of software and/or data located in separate directories on the filesystem,
     and makes them appear to be installed in the same place.
   + [[https://github.com/aria2/aria2][aria2]]: aria2 is a lightweight multi-protocol & multi-source, cross platform
     download utility operated in command-line. It supports HTTP/HTTPS, FTP,
     SFTP, BitTorrent and Metalink.
   + [[https://github.com/scopatz/nanorc][nano-syntax-highlighting]]: Improved Nano Syntax Highlighting Files
   + [[https://www.vanheusden.com/multitail/][multitail]]: MultiTail allows you to monitor logfiles and command output in
     multiple windows in a terminal, colorize, filter and merge.
   + [[https://launchpad.net/safe-rm][safe-rm]]: wrapper around rm to make it prevent accidental delete of
     important directories that should never be deleted
   + [[https://github.com/nvbn/thefuck][thefuck]]: correct previous console command
   + [[https://github.com/junegunn/fzf/][fzf]]: A command-line fuzzy finder 
     + Install it by:

       #+BEGIN_SRC bash
git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install
# select completions and keybindings for fzf  
#+END_SRC

** Language specific tools

*** Shell
    
   + [[https://github.com/mvdan/sh][shfmt]]: format shell files using =shfmt=
   + [[https://github.com/koalaman/shellcheck][shellcheck]]: ShellCheck, a static analysis tool for shell scripts
   + [[https://github.com/bash-lsp/bash-language-server][bash-language-server]]: LSP server for bash written in TS

*** C/Cpp

    + LLVM tool-chain: llvm, clang, clang++, clangd, lld, clang-tidy, clang-format
    + [[https://github.com/MaskRay/ccls][ccls]]: LSP based language server for C and C++
    + [[https://cmake.org/][CMake]]: C/C++ build files generator
    + [[https://www.qt.io/][qt5]]: GUI Framework for C++
    + [[https://www.boost.org/][boost]]:  peer-reviewed portable C++ source libraries which works will with
      the standard library
    + [[https://www.qt.io/development-tools][qt creator]]: IDE for C++ written by Qt team
    + [[https://github.com/KDE/clazy][clazy]]: Qt oriented code checker based on clang framework
    + [[https://ccache.dev/][ccache]]: Ccache (or “ccache”) is a compiler cache. It speeds up
      recompilation by caching previous compilations and detecting when the same
      compilation is being done again.
    + [[http://cppcheck.sourceforge.net/][cppcheck]]: Cppcheck is an open source static analysis tool for C/C++ code
    + gdb, lldb: debuggers for C/C++ and rust code.
    + [[http://www.doxygen.nl/manual/index.html][doxygen]]: Generate documentation from source code

*** Rust

    + [[https://github.com/rust-analyzer/rust-analyzer][rust-analyzer]]: An experimental Rust compiler front-end for IDEs and text
      editors. On Arch Linux install =rust-analyzer-bin= from =AUR=
    + [[https://github.com/RustSec/cargo-audit][cargo-audit]]: Audit Cargo.lock files for crates with security
      vulnerabilities reported to the RustSec Advisory Database.
    + [[https://github.com/RazrFalcon/cargo-bloat][cargo-bloat]]: find out what takes the most space in your executable
    + [[https://github.com/nabijaczleweli/cargo-update][cargo-update]]: A cargo subcommand for checking and applying updates to
      installed executables
    + Rustfmt
    + Clippy

*** Go
    + Gopls
    + Godef
     
*** Haskell
    + HIE

*** Python
    + [[https://github.com/Microsoft/python-language-server][Microsoft Python Language Server]]
    + [[https://github.com/psf/black][black]]: code formatter for python
    + [[https://github.com/pyenv/pyenv][pyenv]]: simple python version management
      + Install [[https://github.com/pyenv/pyenv-virtualenv][pyenv-virtualenv]] plugin for =pyenv= to get virtual environment
        capabilities for pyenv
      + In ~.envrc~ of a project, add the following code:

        #+BEGIN_SRC bash
# configure pyenv for the project
export PYENV_ROOT="${HOME}/.pyenv"

if [ -d "${PYENV_ROOT}" ]; then
	export PATH="${PYENV_ROOT}/bin:${PATH}"
	eval "$(pyenv init -)"
	eval "$(pyenv virtualenv-init -)"
fi
#+END_SRC

    + [[https://pypi.org/project/flake8/][flake8]]: pycodestyle, pyflakes, mccabe

      Install it with:

      #+BEGIN_SRC bash
paru -S flake8
#+END_SRC

    + [[http://mypy-lang.org/][mypy]]: optional static type checker for python
      Install it with:

      #+BEGIN_SRC bash
paru -S mypy
#+END_SRC

    + [[https://github.com/PyCQA/bandit][bandit]]: for finding common security flaws in python code


* Configure ntp
  - Install =ntp= package and enable the ntp service
  - Run the following commands to disable =systemd-timesyncd=
    #+begin_src bash
    systemctl stop systemd-timesyncd
    systemctl disable systemd-timesyncd
    sudo timedatectl set-ntp False
    #+end_src

  - =sudo systemctl enable ntpd.service= -> to start ntpd at boot
  - enable logs and statistics for ntp
  - =ntpq -pn= -> show the status of ntp  
  
* Keyboard configuration and mouse:
  + Configure locale for your system by adding the below lines to =.zshenv=
    file:

    #+BEGIN_SRC bash
# locale configuration
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
#+END_SRC

  + Install ~xorg-xmodmap~ for keyboard configuration: Left control is now
    =hyper= and Caps Lock is now =control=
  + Enable sticky keys are enabled without locking using =xkbset=
  + Add hook to suspend so that =xmodmap= is run and =sticky keys= are enabled
    after computer is resumed. This is necessary because X keyboard settings are
    reset after suspend.

    Create a file =/etc/systemd/system/resume@csraghunandan.service=
    #+BEGIN_SRC conf
[Unit]
Description=User resume actions
After=suspend.target

[Service]
User=csraghunandan
Type=simple
Environment=DISPLAY=:0
ExecStart=/usr/bin/bash /home/csraghunandan/.scripts/system/keeb

[Install]
WantedBy=suspend.target
    #+END_SRC
    And run =sudo systemctl enable resume@.service=
    
  + reverse mouse scroll direction in i3, by modifying libinput drivers for
    mouse/pointer in the file =/usr/share/X11/xorg.conf.d/40-libinput.conf=:

      #+BEGIN_SRC conf
Section "InputClass"
Identifier "libinput pointer catchall"
MatchIsPointer "on"
MatchDevicePath "/dev/input/event*"
Option "NaturalScrolling" "on"
Driver "libinput"
EndSection
      #+END_SRC
     
  + Add right click option to touchpad for double tap fingers and natural
    scrolling by adding to the same file above, the line:
    #+BEGIN_SRC conf
Option "Tapping" "on"                # enables tapping
Option "ClickMethod" "clickfinger"   # replaces synaptics tapping setup
Option "NaturalScrolling" "on"
#+END_SRC

* Power management:
  + modify the following lines in ~/etc/systemd/logind.conf~:
    
    #+BEGIN_SRC conf
HandlePowerKey=suspend
HandleLidSwitch=lock
#+END_SRC

    This will enable the system to:
    + =suspend= when pressed the power button instead of shutdown
    + If the laptop lid is closed, =lock= the system
  + Use =i3lock= as the lockscreen for i3 and configure it like so:
    + Setup an alias for =i3lock=:

      #+BEGIN_SRC bash
alias i3lock="i3lock && echo mem > /sys/power/state"  
#+END_SRC
    + Use =xsslock= to run =i3lock= when the system is locked
    + Use =xidlehook= to lock the screen after 10mins of inactivity and suspend
      computer after 10more minutes of further inactivity

  + =TLP= and =thermald= for power management for laptops:
    - Enable =tlp.servce=
    - mask the systemd service =systemd-rfkill.service= and socket =systemd-rfkill.socket=
    - enable =thermald.service=. This will reduce the CPU clock if temperature
      exceeds a threshold
  + copy =low-battery-alert.service= and =low-battery-alert.timer= to
    =/etc/systemd/system/= and enable both of them by running =sudo systemctl
    enable low-battery-alert.service= and =sudo systemctl enable
    low-battery-alert.timer=.
    + Install =acpi= for fetching laptop battery status    
    

* Configure media related applications
  
  + Run ~mkdir -p ~/.config/mpd/playlists~ and enable ~mpd~ service by running:
    ~sudo systemctl enable mpd.service~
  + Use ~ncmpcpp~ as the client for =mpd=
  + Install ~mpDris2~ (from AUR) and enable it by running ~systemctl --user
    enable mpDris2~
  + Install =playerctl= and =pulseaudio-ctl= for media controls. This allows us
    to add notifications and maximum volume limit for system volume
  + Install =alsa= and =pulseaudio=: =alsa-utils=, =alsa-plugins=,
    =pluseaudio-alsa=
  + Use =VLC= as the media player for videos. Enable hardware acceleration for
    decoding by installing: =intel-media-driver=, =libva-utils=,
    =xf86-video-intel= and selecting the VAAPI backend for hardware decoding in
    settings for VLC
  + =pavucontrol= (controlling audio through UI)
  + Other media tools:
    + Gstreamer
    + ffmpeg, libav
    + imagemagick, graphicsmagick
    + graphviz
    + flac, faac
    + x264, x265
    + youtube-dl (download from youtube and other media sites)
    + Bluetooth configuration:
      + Install =bluez=, =bluez-utils= and =blueman= (front end for bluetooth)
      + Enable and start bluetooth service:

        #+BEGIN_SRC bash
    sudo systemctl enable bluetooth.service --now  
#+END_SRC

* Security
  
  + =KeepassXC= as the default password manager for linux. Also, enable the
    browser integration and install plugins for chrome and firefox
  + =ufw=: simple firewall for linux
    
    enable =ufw.service= after installation and run =sudo ufw default deny= to enable the firewall
  + change the default DNS resolver to =1.1.1.1= by editing the =nameserver=
    entry in =/etc/resolv.conf= and make it unwritable by running the command:
    =chattr +i /etc/resolv.conf=
  + SSH config for git
    + Add ~SSH_AUTH_SOCK DEFAULT="${XDG_RUNTIME_DIR}/ssh-agent.socket"~ to
      =~/.pam_environment= file
    + If you are running =openssh= verison > 7.2, add these to =~/.ssh/config=
      file: =AddKeysToAgent yes=. This will instruct the ssh client to always
      add the key to a running agent, so there’s no need to ssh-add it
      beforehand.
    + Create a =~/.ssh/config= file and change permissions by: =chmod 600 ~/.ssh/config=
    + Start the =ssh-agent= service:

      #+BEGIN_SRC bash
systemctl --user enable ssh-agent --now  
#+END_SRC



* Reader applications
  
  + Use =Zathura= as the default reader
    + Install the following packages: =zathura-pdf-mupdf=, =zathura-djvu=, =zathura-cb=
    + Enable copy to clipboard by adding to =~/.config/zathura/zathurarc=:
    + Make =zathura= the default PDF reader for opening applications in firefox,
      or other GUI applications by modifying the =mineapps.list=
    + Make =zathura= the default =Reader= application by adding the following
      lines in your =.zshenv= file:

      #+BEGIN_SRC bash
export READER="zathura"  
#+END_SRC

  + Use =libreoffice-fresh= package for installing libreoffice
  + Dictionary and thesaurus config:
    + Install =artha= as the thesarus for linux. Bind its shortcut to =Hyper+Alt+t=
    + Install =goldendict= with websters 1828 dictionary by following: [[http://eduardosanchez.me/2015/09/07/installing-websters-revised-unabridged-dictionary-on-ubuntu-gnulinux/][this guide]] . Bind its shortcut to =Meta+Alt+t=
  + Install =hunspell=, =hunspell-en_US=, =hunspell-en_GB= for spell checker
  + Install =dictd= for English to other language dictionary translations
  + Install =texlive-most= and =pygments= for a complete latex environment
  + Install =pdf-tools= to be able to view PDF file inside emacs using =poppler=
  + Install =pandoc= for converting documents from one format to other 

* Productivity tools

  + =GNU Emacs=: My choice of text editor
  + =Postman= for testing HTTP requests
  + =Zeal= for offline documentation
  + =Source Trail= for browsing C/Cpp and Python projects visually
  + Install LibreOffice from =libreoffice-fresh= (in AUR)
  + =Plantuml= for creating control flow and other diagrams
  + =dbeaver= (open source Database viewer)
  + =TeamViewr= for remote control
    + Enable and start teamviewer deamon in the background by:

      #+BEGIN_SRC bash
sudo sytemctl enable teamviewerd.service --now  
#+END_SRC
  + =Wireshark= for network analyzing. Install it with the following packages:
    =wireshark-qt=, =wireshark-cli=
  + [[https://github.com/editorconfig/editorconfig-core-c][editorconfig]]: EditorConfig helps maintain consistent coding styles for
    multiple developers working on the same project across various editors and
    IDEs.
  + [[https://johnfactotum.github.io/foliate/][foliate]]: Simple and modern ebook reader


* Configuring i3 and tools used
  
  + Install ~deadd-notification-center~ for getting notifications for  *i3*
  + Install ~rofi~ as the application launcher
  + Use [[https://github.com/greshake/i3status-rust][i3status-rs]] as the bar for i3wm
  + Use =numlockx= to enable numlock functionality
  + [[https://github.com/jcs/xbanish][xbanish]]: banish the mouse cursor when typing, show it again when the mouse
    moves
  + Use =feh= to set the wallpaper background
  + Use =i3lock= as the locker for i3wm
  + Use [[https://github.com/ibhagwan/picom][picom]] as the display compositor for i3. Install from =git=, for Archlinux,
    install using =picom-ibhagwan-git= from AUR.
    + Use =experimental backends= option when running picom, otherwise the =glx=
      backend will not work.

    + To run =picom=, copy the systemd user service file(=picom.service=) to
      =/usr/lib/systemd/user/= and run the below command:

      #+BEGIN_SRC bash
# this needed as sometimes picom crashes when restarting i3 session
systemctl --user enable picom.service --now
#+END_SRC    
  + Use [[https://github.com/coldfix/udiskie][udiskie]] to get notifications and manage devices connected to the system.
  + Use [[https://github.com/naelstrof/maim][maim]] and =xdotool= to take desktop screenshots. =xdotool= is also used
    to get picture in picture effect using i3. The following are enabled in i3:
    - screenshot of entire screen
    - screenshot of active window
    - screenshot of region
    - copy selected region to clipboard
  + Install =xorg-backlight= brightness of the screen
  + Install =xorg-xinput= for enabling/disabling touchpad
  + Use [[https://github.com/cdown/clipmenu][clipmenu]] as the clipboard manager for Linux:
    + Enable and start the =clipmenud= service:

      #+BEGIN_SRC bash
sudo systemctl enable clipmenud --now  
#+END_SRC
    + set ~CM_LAUNCHER=rofi~, so that you can use rofi to view clipboard

  + Use =nm-applet= which will provide a tray for NetworkManger

  + Set =firefox-developer-edition= as the default browser by:

    #+BEGIN_SRC bash
gio mime x-scheme-handler/http firefox-developer-edition.desktop
gio mime x-scheme-handler/https firefox-developer-edition.desktop
#+END_SRC

  + Run =blueman-tray= to get a tray icon for bluetooth. This requires =blueman=
    to be installed
  + Install [[https://github.com/Airblader/xedgewarp][xedgewrap]] to allow mouse to wrap across multiple monitors
  + Install [[https://github.com/chmln/enact][enact]] to have automatic configuration of multiple monitors with
    hotplug support:

    #+BEGIN_SRC bash
# install enact using cargo
cargo install --git https://github.com/chmln/enact

# to use in i3, add this line to your config:
exec --no-startup-id enact --pos top --watch &
#+END_SRC

  + Install [[https://github.com/RasmusLindroth/i3keys][i3keys]] to list all the bindings made for i3wm in web or terminal

  + [[https://github.com/thezbyg/gpick][gpick]]: Advanced color picker written in C++ using GTK+ toolkit

  + [[https://github.com/baskerville/sxhkd][sxhkd]]: Simple X hotkey daemon

* System

  + =intel-gpu-tools=: this will install the application =intel-gpu-top=, which
    we can use to monitor Intel GPU usage
  + [[https://gitlab.gnome.org/GNOME/nautilus][Nautilus]] as the default graphical file explorer    
  + =xorg-xev=, =xorg-xprop=, =xorg-xhost=, =xorg-xrandr=: X11 related utilities

* Appearance

  + Use =nordic= as the default GTK theme and =paper-icon-theme= as the
    default icons set
  + Font sets for arch: =noto-fonts=, =noto-fonts-extra=, =noto-fonts-cjk=,
    =noto-fonts-emoji=, =otf-font-awesome=, =powerline-fonts=,
    =awesome-terminal-fonts=
    
    To install all the necessary font packages to fonts from display various
    langauges and emoji
  + Use =Iosevka SS08 Medium= as the default monospace font. Install it by
    running: =paru -S ttf-iosevka-ss08=
  + Use =lxappearence= to change the font, icons and theme
  + Install =redshift= to warn the screen during night times to reduce eye strain
    + Enable and start: ~redshift~ by running

      #+BEGIN_SRC bash
  systemctl --user enable redshift-gtk.service --now  
  #+END_SRC

    + In order to allow access Redshift to use GeoClue2, add the following lines
      to ~/etc/geoclue/geoclue.conf~:

      #+begin_src conf
[redshift]
allowed=true
system=false
users=
      #+end_src

    + Use [[https://github.com/sddm/sddm][sddm]] as the display manager for linux.
    
  + =Nord= themes for the following:
    + Emacs using the =doom-nord= theme
    + =Alacritty= nord theme colors
    + GTK theme using: =nordic-theme-git=
    + =i3wm=, =i3bar= and =i3status-rust= Nord themes
    + =rg= using custom config file
    + =broot= using custom config file
    + =fd=, =lsd= using =dir_colors=
    + =rofi= Nord theme using config file
    + =procs= using custom config file
    + =fzf= Nord theme by modifying the environment variables
    + =bat= in built Nord themes
    + Colored =man= pages using =less=
    + =nano= UI Nord theme by modifying =nanorc=
    + =tmux= Nord theme using tpm plugin
    + =Xresources= Nord theme colors by modifying =.Xresources= file
    + =Zathura= UI Nord color theme by modifying config file
    + Install =Nord= theme for =qt= applications
      + =kvantum= and install =kvantum-theme-nordic-git=
      + Open =kvantum-manager= and change default theme to =Nordic-Darker=
    + =git= Nord color theme by modifying =.gitconfig=
    + =delta= diff Nord color theme by modifying =.gitconfig=
    + Colored =sudo= and =grep= by modifying env variables
    + =ncmpcpp= by modifying the config file
    + Firefox [[https://www.deviantart.com/dpcdpc11/art/Nord-for-Firefox-837860916][Nord color]] theme
