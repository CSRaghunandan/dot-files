* dot-files repository

  All the dot-files for my Arch Linux installation with *i3-gaps* as the tiling
  window manager
  
* Configure ZSH
  
  + Install and use ~zsh~ as the default shell by running ~chsh -s $(which zsh)~
  + Install [[https://github.com/zimfw/zimfw][zimfw]] by following the instructions in readme
  + After installation, run ~zimfw install~ followed by ~zimfw uninstall~, to
    modify the plugins for ~zimfw~
  + Install [[https://github.com/alacritty/alacritty][alacritty]]  as the default terminal.
    
* Command line tools
  
** Useful command line line tools written in Rust
   
   + Use [[https://github.com/sharkdp/fd][fd]] as an alternative for =find=
   + Use [[https://github.com/BurntSushi/ripgrep][Ripgrep]] as an alternative for =grep=
   + [[https://github.com/phiresky/ripgrep-all][ripgrep_all]]: rga: ripgrep, but also search in PDFs, E-Books, Office
     documents, zip, tar.gz, etc.
   + [[https://github.com/m4b/bingrep][bingrep]]: like ~grep~ UBER, but for binaries
   + [[https://github.com/XAMPPRocky/tokei][tokei]]: count lines of code
   + Use [[https://github.com/sharkdp/bat][bat]]  as an alternative for =cat= and =less= to view files
   + Use [[https://github.com/Peltoche/lsd][lsd]] as a modern alternative to =ls=
   + Use [[https://github.com/Canop/broot][broot]] as a modern alternative to tree
   + [[https://github.com/yaa110/nomino][nomino]]: batch rename files using regex
   + [[https://github.com/denisidoro/navi/][navi]]: An interactive cheatsheet tool for the command-line
   + [[https://github.com/sharkdp/hyperfine][hyperfine]]: A command-line benchmarking tool
   + [[https://github.com/sharkdp/hexyl][hexyl]]: command-line hex viewer 
   + [[https://github.com/dalance/procs/][procs]]: A modern replacement for ps written in Rust
   + [[https://github.com/cjbassi/ytop][ytop]]: A TUI system monitor written in Rust

** Useful command line utilities

   + [[https://github.com/tmux/tmux][tmux]]:  a terminal multiplexer
   + [[https://github.com/zquestz/s][s]]: search from the command line
   + [[https://github.com/curusarn/resh][resh]]: Contextual shell history for zsh and bash
   + [[https://github.com/isacikgoz/tldr][tldr++]]: quickly view cheatsheets for linux commands
   + [[https://github.com/nosarthur/gita][Gita]]: Manage multiple git repositories easily
   + [[https://dev.yorhel.nl/ncdu][ncdu]]: Ncdu is a disk usage analyzer with an ncurses interface.
   + [[https://lnav.org/][lnav]]: Watch and analyze your log files from a terminal.
   + [[https://salsa.debian.org/minicom-team/minicom][minicom]]: Serial communications program
   + [[https://github.com/stedolan/jq][jq]]: command line JSON processor
   + [[https://ffmpeg.org/][ffmpeg]]: A complete, cross-platform solution to record, convert and stream audio and video.
   + [[https://github.com/ImageMagick/ImageMagick][imagemagick]],[[http://www.graphicsmagick.org/index.html][graphicsmagick]]: manipulate images on the command line
   + [[https://graphviz.org/][graphviz]]: graph visualization software
   + [[https://gstreamer.freedesktop.org/][Gstreamer]]: pipeline based multi-media framework
   + [[https://github.com/denilsonsa/prettyping][prettyping]]: `prettyping` is a wrapper around the standard `ping` tool,
     making the output prettier, more colorful, more compact, and easier to
     read.
   + [[https://github.com/mptre/yank/][yank]]: yank terminal output to clipboard
   + [[https://github.com/syncthing/syncthing][syncthing]]: modern cross platform alternative to rsync
   + [[https://www.gnu.org/software/stow/][GNU Stow]]: GNU Stow is a symlink farm manager which takes distinct packages
     of software and/or data located in separate directories on the filesystem,
     and makes them appear to be installed in the same place.
   + [[https://github.com/aria2/aria2][aria2]]: aria2 is a lightweight multi-protocol & multi-source, cross platform
     download utility operated in command-line. It supports HTTP/HTTPS, FTP,
     SFTP, BitTorrent and Metalink.

** Language specific tools

*** Shell
    
   + [[https://github.com/mvdan/sh][shfmt]]: format shell files using =shfmt=
   + [[https://github.com/koalaman/shellcheck][shellcheck]]: ShellCheck, a static analysis tool for shell scripts

*** C/Cpp

    + [[https://github.com/MaskRay/ccls][ccls]]: LSP based language server for C and C++
    + [[https://cmake.org/][CMake]]: C/C++ build files generator
    + [[https://www.qt.io/][qt5]]: GUI Framework for C++
    + [[https://www.boost.org/][boost]]:  peer-reviewed portable C++ source libraries which works will with
      the standard library
    + [[https://www.qt.io/development-tools][qt creator]]: IDE for C++ written by Qt team
    + [[https://github.com/KDE/clazy][clazy]]: Qt oriented code checker based on clang framework
    + [[https://ccache.dev/][ccache]]: Ccache (or “ccache”) is a compiler cache. It speeds up
      recompilation by caching previous compilations and detecting when the same
      compilation is being done again.
    + [[http://cppcheck.sourceforge.net/][cppcheck]]: Cppcheck is an open source static analysis tool for C/C++ code
    + gdb, lldb: debuggers for C/C++ and rust code.

*** Rust

    + [[https://github.com/rust-analyzer/rust-analyzer][rust-analyzer]]: An experimental Rust compiler front-end for IDEs and text
      editors. On Arch Linux install =rust-analyzer-bin= from =AUR=
    + [[https://github.com/RustSec/cargo-audit][cargo-audit]]: Audit Cargo.lock files for crates with security
      vulnerabilities reported to the RustSec Advisory Database.
    + [[https://github.com/RazrFalcon/cargo-bloat][cargo-bloat]]: find out what takes the most space in your executable
    + [[https://github.com/nabijaczleweli/cargo-update][cargo-update]]: A cargo subcommand for checking and applying updates to
      installed executables

* Configure ntp
  - Install =ntp= package and enable the ntp service
  - Run the following commands to disable =systemd-timesyncd=
    #+begin_src bash
    systemctl stop systemd-timesyncd
    systemctl disable systemd-timesyncd
    sudo timedatectl set-ntp False
    #+end_src

  - =sudo systemctl enable ntpd.service= -> to start ntpd at boot
  - enable logs and statistics for ntp
  - =ntpq -pn= -> show the status of ntp  
  
* Keyboard configuration and mouse:
  + Install ~xorg-xmodmap~ for keyboard configuration: Left control is now
    =hyper= and Caps Lock is now =control=
  + Enable sticky keys are enabled without locking using =xkbset=
  + Add hook to suspend so that =xmodmap= is run and =sticky keys= are enabled
    after computer is resumed. This is necessary because X keyboard settings are
    reset after suspend.

    Create a file =/etc/systemd/system/resume@csraghunandan.service=
    #+BEGIN_SRC conf
[Unit]
Description=User resume actions
After=suspend.target

[Service]
User=csraghunandan
Type=simple
Environment=DISPLAY=:0
ExecStart=/usr/bin/bash /home/csraghunandan/.scripts/system/keeb

[Install]
WantedBy=suspend.target
    #+END_SRC
    And run =sudo systemctl enable resume@.service=
    
 + reverse mouse scroll direction in i3

     By modifying libinput drivers for mouse/pointer in the file
     =/usr/share/X11/xorg.conf.d/40-libinput.conf=

     #+BEGIN_SRC conf
Section "InputClass"
Identifier "libinput pointer catchall"
MatchIsPointer "on"
MatchDevicePath "/dev/input/event*"
Option "NaturalScrolling" "on"
Driver "libinput"
EndSection
     #+END_SRC
     
  + Add right click option to touchpad for double tap fingers and natural
     scrolling by adding to the same file above, the line:
     #+BEGIN_SRC conf
Option "Tapping" "on"                # enables tapping
Option "ClickMethod" "clickfinger"   # replaces synaptics tapping setup
Option "NaturalScrolling" "on"
#+END_SRC

* Power management:
  + modify the following lines in ~/etc/systemd/logind.conf~:
    
    #+BEGIN_SRC conf
HandlePowerKey=suspend
HandleLidSwitch=suspend
HoldoffTimeoutSec=30s
IdleAction=suspend
IdleActionSec=30min  
#+END_SRC

    This will enable the system to:
    + =suspend= when pressed the power button instead of shutdown
    + If the system is idle for 30minutes, =suspend=
    + If the laptop lid is closed, =suspend= the system
    + Hold off on suspending the system for =30s= after closing the lid
  + Use =i3lock= as the lockscreen for i3. Install =xss-lock= and =xautolock=
    for power management during lock.
  + =TLP= and =thermald= for power management for laptops:
    - Enable =tlp.servce=
    - mask the systemd service =systemd-rfkill.service= and socket =systemd-rfkill.socket=
    - enable =thermald.service=. This will reduce the CPU clock if temperature
      exceeds a threshold
  + copy =low-battery-alert.service= and =low-battery-alert.timer= to
    =/etc/systemd/system/= and enable both of them by running =sudo systemctl
    enable low-battery-alert.service= and =sudo systemctl enable
    low-battery-alert.timer=.
    + Install =acpi= for fetching laptop battery status    
    

* Configure media related applications
  
  + Run ~mkdir -p ~/.config/mpd/playlists~ and enable ~mpd~ service by running:
    ~sudo systemctl enable mpd.service~
  + Use ~ncmpcpp~ as the client for =mpd=
  + Install ~mpDris2~ (from AUR) and enable it by running ~systemctl --user
    enable mpDris2~
  + Install =playerctl= and =pulseaudio-ctl= for media controls. This allows us
    to add notifications and maximum volume limit for system volume
  + Install =alsa= and =pulseaudio=: =alsa-utils=, =alsa-plugins=,
    =pluseaudio-alsa=
  + Use =VLC= as the media player for videos. Enable hardware acceleration for
    decoding by installing: =intel-media-driver=, =libva-utils=,
    =xf86-video-intel= and selecting the VAAPI backend for hardware decoding in
    settings for VLC
  + =pavucontrol= (controlling audio through UI)
  + Other media tools:
    + Gstreamer
    + ffmpeg, libav
    + imagemagick, graphicsmagick
    + graphviz
    + flac, faac
    + x264, x265
    + youtube-dl (download from youtube and other media sites)
    + Bluetooth configuration:
      + Install =bluez=, =bluez-utils= and =blueman= (front end for bluetooth)
      + Enable and start bluetooth service:

        #+BEGIN_SRC bash
    sudo systemctl enable bluetooth.service --now  
#+END_SRC

* Security
  
  + =KeepassXC= as the default password manager for linux. Also, enable the
    browser integration and install plugins for chrome and firefox
  + =ufw=: simple firewall for linux
    
    enable =ufw.service= after installation and run =sudo ufw default deny= to enable the firewall
  + change the default DNS resolver to =1.1.1.1= by editing the =nameserver=
    entry in =/etc/resolv.conf= and make it unwritable by running the command:
    =chattr +i /etc/resolv.conf=


* Reader applications
  
  + Use =Zathura= as the default reader
    + Install the following packages: =zathura-pdf-mupdf=, =zathura-djvu=, =zathura-cb=
    + Enable copy to clipboard by adding to =~/.config/zathura/zathurarc=:
  + Use =libreoffice-fresh= package for installing libreoffice
  + Dictionary and thesaurus config:
    + Install =artha= as the thesarus for linux. Bind its shortcut to =Hyper+Alt+t=
    + Install =goldendict= with websters 1828 dictionary by following: [[http://eduardosanchez.me/2015/09/07/installing-websters-revised-unabridged-dictionary-on-ubuntu-gnulinux/][this guide]] . Bind its shortcut to =Meta+Alt+t=
  + Install =hunspell=, =hunspell-en_US=, =hunspell-en_GB= for spell checker
  + Install =dictd= for English to other language dictionary translations
  + Install =texlive-most= and =pygments= for a complete latex environment
  + Install =pdf-tools= to be able to view PDF file inside emacs using =poppler=
  + Install =pandoc= for converting documents from one format to other 

* Configuring i3 and tools used
  
  + Install ~deadd-notification-center~ for getting notifications for  *i3*
    + Enable and start the =deadd-notification-center= service:

      #+BEGIN_SRC bash
sudo systemctl enable deadd-notification-center --now  
#+END_SRC

  + Install ~rofi~ as the application launcher
  + Use =i3blocks= as the bar for i3wm
  + Use =numlockx= to enable numlock functionality
  + Use =unclutter= to hide mouse pointer after a few seconds of idle time.
  + Use =feh= to set the wallpaper background
  + Use =i3lock= as the locker for i3wm
  + Use [[https://github.com/yshui/picom/][picom]] as the display compositor for i3. Install from =git=, for Archlinux,
    install using =picom-git= from AUR.
    + Use =experimental backends= option when running picom, otherwise the =glx=
      backend will not work.
  + Use [[https://github.com/coldfix/udiskie][udiskie]] to get notifications and manage devices connected to the system.
  + Use [[https://github.com/naelstrof/maim][maim]] and =xdotool= to take desktop screenshots. =xdotool= is also used
    to get picture in picture effect using i3. The following are enabled in i3:
    - screenshot of entire screen
    - screenshot of active window
    - screenshot of region
    - copy selected region to clipboard
  + Install =xorg-backlight= brightness of the screen
  + Install =xorg-xinput= for enabling/disabling touchpad
  + Use [[https://github.com/cdown/clipmenu][clipmenu]] as the clipboard manager for Linux:
    + Enable and start the =clipmenud= service:

      #+BEGIN_SRC bash
sudo systemctl enable clipmenud --now  
#+END_SRC
    + set ~CM_LAUNCHER=rofi~, so that you can use rofi to view clipboard

  + Use =nm-applet= which will provide a tray for NetworkManger

  + Set =firefox-developer-edition= as the default browser by:

    #+BEGIN_SRC bash
gio mime x-scheme-handler/http firefox-developer-edition.desktop
gio mime x-scheme-handler/https firefox-developer-edition.desktop
#+END_SRC

  + Run =blueman-tray= to get a tray icon for bluetooth. This requires =blueman=
    to be installed
  + Install [[https://github.com/v1cont/yad][yad]] to get dialog popups. This is used for calendar when pressing
    date in i3bar
  + Install [[https://github.com/Airblader/xedgewarp][xedgewrap]] to allow mouse to wrap across multiple monitors
  + Install [[https://github.com/chmln/enact][enact]] to have automatic configuration of multiple monitors with
    hotplug support:

    #+BEGIN_SRC bash
# install enact using cargo
cargo install --git https://github.com/chmln/enact

# to use in i3, add this line to your config:
exec --no-startup-id enact --pos top --watch &
#+END_SRC

  + Install [[https://github.com/RasmusLindroth/i3keys][i3keys]] to list all the bindings made for i3wm in web or terminal

  + Install =i3-auto-layout= to automatically layout i3 windows in a uniform
    manner:

    #+BEGIN_SRC bash
# install i3-auto-layout with cargo
cargo install --git https://github.com/chmln/i3-auto-layout  
#+END_SRC


* Productivity tools

  + Install *Emacs28* from source by running:

    #+BEGIN_SRC bash
git clone -b master https://github.com/emacs-mirror/emacs --single-branch
cd emacs
sh autogen.sh
./configure --with-modules --with-rsvg --with-dbus --with-imagemagick --without-pop --with-xft --with-xml2 --with-libotf
make
make install
#+END_SRC

  + =Postman= for testing HTTP requests
  + =Zeal= for offline documentation
  + =Source Trail= for browsing C/Cpp and Python projects visually
  + Install LibreOffice from =libreoffice-fresh= (in AUR)
  + =Plantuml= for creating control flow and other diagrams
  + =dbeaver= (open source Database viewer)
  + =TeamViewr= for remote control
    + Enable and start teamviewer deamon in the background by:

      #+BEGIN_SRC bash
sudo sytemctl enable teamviewerd.service --now  
#+END_SRC
  + =Wireshark= for network analyzing. Install it with the following packages:
    =wireshark-qt=, =wireshark-cli=

* Appearance

  + Use =arc-gtk-theme= as the default theme and =paper-icon-theme= as the
    default icons set
  + Font sets for arch: =noto-fonts=, =noto-fonts-extra=, =noto-fonts-cjk=,
    =noto-fonts-emoji=, =otf-font-awesome=
    
    To install all the necessary font packages to fonts from display various
    langauges and emoji
  + Use =Iosevka SS08= as the default monospace font
  + Use =lxappearence= to change the font, icons and theme
  + Install =redshift= to warn the screen during night times to reduce eye strain
    + Enable and start: ~redshift~ by running

      #+BEGIN_SRC bash
  systemctl --user enable redshift-gtk.service --now  
  #+END_SRC


    + In order to allow access Redshift to use GeoClue2, add the following lines
      to ~/etc/geoclue/geoclue.conf~:
    #+begin_src conf
[redshift]
allowed=true
system=false
users=
    #+end_src
