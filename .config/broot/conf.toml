
###############################################################
# This configuration file lets you
# - define new commands
# - change the shortcut or triggering keys of built-in verbs
# - change the colors
# - set default values for flags
#
# Configuration documentation is available at
#     https://dystroy.org/broot
###############################################################

###############################################################
# Default flags
# You can set up flags you want broot to start with by
# default, for example `default_flags="ihp"` if you usually want
# to see hidden and gitignored files and the permissions (then
# if you don't want the hidden files you can launch `br -H`)
# A popular flag is the `g` one which displays git related info.
#
default_flags = ""

###############################################################
# Verbs and shortcuts
# You can define your own commands which would be applied to
# the selection.
#
# Exemple 1: launching `tail -n` on the selected file (leaving broot)
# [[verbs]]
# name = "tail_lines"
# invocation = "tl {lines_count}"
# execution = "tail -f -n {lines_count} {file}"
#
# Exemple 2: creating a new file without leaving broot
# [[verbs]]
# name = "touch"
# invocation = "touch {new_file}"
# execution = "touch {directory}/{new_file}"
# leave_broot = false

# If $EDITOR isn't set on your computer, you should either set it using
#  something similar to
#   export EDITOR=/usr/bin/nvim
#  or just replace it with your editor of choice in the 'execution'
#  pattern.
# Example:
#  execution = "/usr/bin/nvim {file}"
[[verbs]]
invocation = "edit"
key = "F2"
shortcut = "e"
execution = "$EDITOR {file}"

[[verbs]]
key = "ctrl-c"
execution = ":quit"

[[verbs]]
invocation = "create {subpath}"
execution = "$EDITOR {directory}/{subpath}"

[[verbs]]
invocation = "open"
key = "enter"
leave_broot = false
execution = "$EDITOR {file}"

[[verbs]]
invocation = "git_diff"
shortcut = "gd"
execution = "git diff {file}"

# If $PAGER isn't set on your computer, you should either set it
#  or just replace it with your viewer of choice in the 'execution'
#  pattern.
# Example:
#  execution = "less {file}"
[[verbs]]
name = "view"
invocation = "view"
execution = "$PAGER {file}"

# A popular set of shorctuts for going up and down:
#
 [[verbs]]
key = "ctrl-n"
execution = ":line_down"
#
[[verbs]]
key = "ctrl-p"
execution = ":line_up"
#
[[verbs]]
key = "ctrl-v"
execution = ":page_down"
#
[[verbs]]
key = "alt-v"
execution = ":page_up"

# If you develop using git, you might like to often switch
# to the "git status" filter:
# [[verbs]]
# key = "ctrl-g"
# execution = ":toggle_git_status"

###############################################################
# Adjust the color styles for match the "Nord" theme.
# Note that the "Nord" color palettes must be provided through the terminal.
# Due to the format of this configuration file it is not possible to use shell syntax like
# environment variables in order to dynamically pass color values.
# See:
#   1. https://www.nordtheme.com
[skin]
# +---------------+
# + UI Components +
# +---------------+
char_match = "ansi(6) ansi(8)"
# The default foreground and background style.
default = "none none"
# Indicators rendered at the bottom right, showing the settings regarding hidden files and .gitignore rules.
flag_label = "ansi(6) none"
flag_value = "none none"
# The line for user commands and input.
input = "none none"
# The counter of unlisted nodes when the tree is larger than the available terminal height.
pruning = "ansi(8) none bold"
# Scrollbars that are rendered when the content doesn't fit the current terminal height,
# e.g. in most cases the help screen (`?` shortcut).
scrollbar_track = "ansi(0) none"
scrollbar_thumb = "ansi(8) none"
selected_line = "none ansi(8)"
# The draw lines to visualize the tree structure. 
tree = "ansi(8) none"
# +--- Status Bar ---+
status_bold = "ansi(4) none bold"
# Code like e.g. the full command a verb will execute.
status_code = "ansi(14) none bold"
# The three-dots that are rendered when the content doesn't fit the current terminal width.
status_ellipsis = "ansi(4) ansi(0)"
status_error = "ansi(1) ansi(0) bold"
status_italic = "ansi(6) none italic"
# The state of jobs states, e.g. "computing sizes..." when run with the `--sizes` flag
# in a large directory tree.
status_job = "ansi(0) ansi(6)"
status_normal = "none ansi(0)"

# +------------+
# + Node Types +
# +------------+
# Different node types.
directory = "ansi(4) none bold"
exe = "ansi(14) none bold"
file = "none none"
link = "ansi(6) none"

# +-----------------+
# + Tree Components +
# +-----------------+
# The permissions and owner information when run with the `--permissions` flag.
perm__ = "ansi(12) none"
perm_r = "ansi(12) none"
perm_w = "ansi(12) none"
perm_x = "ansi(12) none"
owner = "ansi(12) none"
group = "ansi(12) none"
# Broken data like e.g. an invalid symlink. 
file_error = "ansi(1) none"

# +-----------+
# + Help Page +
# +-----------+
# The style of different elements on the help screen (`?` shortcut).
help_paragraph = "none none"
help_bold = "ansi(4) none bold"
help_italic = "ansi(6) none italic"
help_code = "ansi(14) none"
help_headers = "ansi(6) none"
